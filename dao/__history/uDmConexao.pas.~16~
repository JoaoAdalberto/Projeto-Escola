unit uDmConexao;

interface

uses
  SysUtils, Classes, WideStrings, DB, SqlExpr, DBClient, Provider, FMTBcd, uEscolaModel;

type
  TdmConexao = class(TDataModule)
    sqlConexao: TSQLConnection;
    dspEscola: TDataSetProvider;
    cdsEscola: TClientDataSet;
    sqlSelectEscola: TSQLDataSet;
    sqlSelectEscolaESCCOD: TIntegerField;
    sqlSelectEscolaESCNOM: TStringField;
    sqlSelectEscolaESCDES: TStringField;
    sqlSelectEscolaESCDATCAD: TSQLTimeStampField;
    sqlSelectEscolaESCCEP: TStringField;
    sqlSelectEscolaESCRUA: TStringField;
    sqlSelectEscolaESCNUM: TStringField;
    sqlSelectEscolaESCCOM: TStringField;
    sqlSelectEscolaESCBAIRRO: TStringField;
    sqlSelectEscolaESCCIDADE: TStringField;
    sqlSelectEscolaESCEST: TStringField;
    cdsEscolaESCCOD: TIntegerField;
    cdsEscolaESCNOM: TStringField;
    cdsEscolaESCDES: TStringField;
    cdsEscolaESCDATCAD: TSQLTimeStampField;
    cdsEscolaESCCEP: TStringField;
    cdsEscolaESCRUA: TStringField;
    cdsEscolaESCNUM: TStringField;
    cdsEscolaESCCOM: TStringField;
    cdsEscolaESCBAIRRO: TStringField;
    cdsEscolaESCCIDADE: TStringField;
    cdsEscolaESCEST: TStringField;
    dsEscola: TDataSource;
    sqlInserirEscola: TSQLDataSet;
    sqlExcluirEscola: TSQLDataSet;
    sqlAlterarEscola: TSQLDataSet;
    procedure cdsEscolaNewRecord(DataSet: TDataSet);
    procedure CarregarUsuario(oEscola : TEscola; iCodigo: Integer);
    function Excluir(iCodigo: Integer; out sErro: string): Boolean;
    function Pesquisar(ACodigo: string): TDataSet;


  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dmConexao: TdmConexao;

implementation

{$R *.dfm}
procedure TdmConexao.CarregarUsuario(oEscola: TEscola; iCodigo: Integer);
var
  sqlCliente : TSQLDataSet;
begin
  sqlCliente := TSQLDataSet.Create(nil);
  try
    sqlCliente.SQLConnection := sqlConexao;
    sqlCliente.CommandText := 'select * from usuarios where (ESCCOD ='+ IntToStr(iCodigo)+ ')';
    sqlCliente.Open;
    oEscola.ESCCOD := sqlCliente.FieldByName('ESCCOD').AsInteger;
    oEscola.ESCNOM := sqlCliente.FieldByName('ESCNOM').AsString;
    oEscola.ESCDES := sqlCliente.FieldByName('ESCDES').AsString;
    oEscola.ESCDATCAD := sqlCliente.FieldByName('ESCDATCAD').AsString;
    oEscola.ESCCEP := sqlCliente.FieldByName('ESCCEP').AsString;
    oEscola.ESCRUA := sqlCliente.FieldByName('ESCRUA').AsString;
    oEscola.ESCNUM := sqlCliente.FieldByName('ESCNUM').AsString;
    oEscola.ESCCOM := sqlCliente.FieldByName('ESCCOM').AsString;
    oEscola.ESCBAIRRO := sqlCliente.FieldByName('ESCBAIRRO').AsString;
    oEscola.ESCCIDADE := sqlCliente.FieldByName('ESCCIDADE').AsString;
    oEscola.ESCEST := sqlCliente.FieldByName('ESCEST').AsString;

  finally

  end;
end;

procedure TdmConexao.cdsEscolaNewRecord(DataSet: TDataSet);
begin
  cdsEscolaESCCOD.Value := cdsEscola.RecordCount+1;
end;

function TdmConexao.Excluir(iCodigo: Integer; out sErro: string): Boolean;
begin
  sqlExcluirEscola.Params[0].AsInteger := iCodigo;
  try
    sqlExcluirEscola.ExecSQL();
    Result := True;
    except on E: Exception do
      begin
        sErro := 'Ocorreu um erro ao excluir a escola: ' + sLineBreak + E.Message;
        Result := False;
      end;
  end;
end;


end.
