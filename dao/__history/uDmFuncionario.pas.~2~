unit uDmFuncionario;

interface

uses
  SysUtils, Classes, WideStrings, DB, SqlExpr, DBClient, Provider, FMTBcd, uFuncionarioModel,
  DateUtils, StrUtils, Variants, Messages, Dialogs, uDmConexao;

type
  TdmFuncionario = class(TDataModule)
    sqlInserirFuncionario: TSQLDataSet;
    dsFuncionario: TDataSource;
    dspFuncionario: TDataSetProvider;
    cdsFuncionario: TClientDataSet;
    procedure CarregarFuncionario(oFuncionario : TFuncionario; iCodigo: Integer);
  private
    function GerarCODFuncionario: Integer;
  public
    function InserirFuncionario(oFuncionario: TFuncionario;
      out sErro: string): Boolean;
  end;

var
  dmFuncionario: TdmFuncionario;

implementation

{$R *.dfm}

function TdmFuncionario.GerarCODFuncionario: Integer;
var
  sqlSequencia : TSQLDataSet;
begin
  sqlSequencia := TSQLDataSet.Create(nil);
  try
    sqlSequencia.SQLConnection := DmConexao.sqlConexao;
    sqlSequencia.CommandText := 'select coalesce(max(FUNCOD), 0) + 1 as seq from Funcionario';
    sqlSequencia.Open;
    Result := sqlSequencia.FieldByName('seq').AsInteger;
  finally
    FreeAndNil(sqlSequencia);

  end;
end;

function TdmFuncionario.InserirFuncionario(oFuncionario: TFuncionario; out sErro: string): Boolean;
var
  DiaNascimento : TDateTime;
begin
  //diaNascimento := StrToDate(FormatDateTime('YYYY/MM/DD', oFuncionario.FUNDATNAS));
  sqlInserirFuncionario.Params.FindParam('FUNCOD').AsInteger := GerarCODFuncionario;
  sqlInserirFuncionario.Params.FindParam('FUNNOM').AsString := oFuncionario.FUNNOM;
  sqlInserirFuncionario.Params.FindParam('FUNDATNAS').AsString := FormatDateTime('DD/MM/YYYY', oFuncionario.FUNDATNAS);
  //sqlInserirFuncionario.Params.FindParam('FUNDATEMP').AsDate := oFuncionario.FUNDATEMP;
  sqlInserirFuncionario.Params.FindParam('FUNSEX').AsString := oFuncionario.FUNSEX;
  sqlInserirFuncionario.Params.FindParam('FUNCPF').AsString := oFuncionario.FUNCPF;
  sqlInserirFuncionario.Params.FindParam('FUNESC').AsInteger := oFuncionario.FUNESC;
  sqlInserirFuncionario.Params.FindParam('FUNESP').AsInteger := oFuncionario.FUNESP;
  sqlInserirFuncionario.Params.FindParam('FUNCEP').AsString := oFuncionario.FUNCEP;
  sqlInserirFuncionario.Params.FindParam('FUNRUA').AsString := oFuncionario.FUNRUA;
  sqlInserirFuncionario.Params.FindParam('FUNNUM').AsString := oFuncionario.FUNNUM;
  sqlInserirFuncionario.Params.FindParam('FUNCOM').AsString := oFuncionario.FUNCOM;
  sqlInserirFuncionario.Params.FindParam('FUNBAI').AsString := oFuncionario.FUNBAI;
  sqlInserirFuncionario.Params.FindParam('FUNCID').AsString := oFuncionario.FUNCID;
  sqlInserirFuncionario.Params.FindParam('FUNEST').AsString := oFuncionario.FUNEST;
//  sqlInserirEscola.Params.FindParam('ESCDATCAD').AsString := FormatDateTime('YYYY/MM/DD HH:MM:SS', Now);

  try
    sqlInserirFuncionario.ExecSQL;
    Result := True;
  except on E: Exception do
    begin
      sErro := 'Ocorreu um erro ao inserir funcionario: ' + sLineBreak + E.Message;
      Result := False;
    end;
  end;
end;

procedure TdmFuncionario.CarregarFuncionario(oFuncionario: TFuncionario; iCodigo: Integer);
var
  sqlFuncionario : TSQLDataSet;
begin
  sqlFuncionario := TSQLDataSet.Create(nil);
  try
    sqlFuncionario.SQLConnection := DmConexao.sqlConexao;
    sqlFuncionario.CommandText := 'select * from escola where (ESCCOD ='+ IntToStr(iCodigo)+ ')';
    sqlFuncionario.Open;
    oFuncionario.FUNCOD := sqlFuncionario.FieldByName('FUNCOD').AsInteger;
    oFuncionario.FUNNOM := sqlFuncionario.FieldByName('FUNNOM').AsString;
    oFuncionario.FUNDATNAS := sqlFuncionario.FieldByName('FUNDATNAS').AsDateTime;
    oFuncionario.FUNDATEMP := sqlFuncionario.FieldByName('FUNDATEMP').AsDateTime;
    oFuncionario.FUNSEX := sqlFuncionario.FieldByName('FUNSEX').AsString;
    oFuncionario.FUNCPF := sqlFuncionario.FieldByName('FUNCPF').AsString;
    oFuncionario.FUNESC := sqlFuncionario.FieldByName('FUNESC').AsString;
    oFuncionario.FUNESP := sqlFuncionario.FieldByName('FUNESP').AsString;
    oFuncionario.FUNCEP := sqlFuncionario.FieldByName('FUNCEP').AsString;
    oFuncionario.FUNRUA := sqlFuncionario.FieldByName('FUNRUA').AsString;
    oFuncionario.FUNNUM := sqlFuncionario.FieldByName('FUNNUM').AsString;
    oFuncionario.FUNCOM := sqlFuncionario.FieldByName('FUNCOM').AsString;
    oFuncionario.FUNBAI := sqlFuncionario.FieldByName('FUNBAI').AsString;
    oFuncionario.FUNCID := sqlFuncionario.FieldByName('FUNCID').AsString;
    oFuncionario.FUNEST := sqlFuncionario.FieldByName('FUNEST').AsString;
  finally
  end;
end;

end.
